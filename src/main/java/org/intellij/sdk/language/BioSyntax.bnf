{
  parserClass="org.intellij.sdk.language.parser.BioSyntaxParser"
  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
  psiClassPrefix="BioSyntax"
  psiImplClassSuffix="Impl"
  psiPackage="org.intellij.sdk.language.psi"
  psiImplPackage="org.intellij.sdk.language.psi.impl"
  elementTypeHolderClass="org.intellij.sdk.language.psi.BioSyntaxTypes"
  elementTypeClass="org.intellij.sdk.language.psi.BioSyntaxElementType"
  tokenTypeClass="org.intellij.sdk.language.psi.BioSyntaxTokenType"
  psiImplUtilClass="org.intellij.sdk.language.psi.impl.BioSyntaxPsiImplUtil"
}

bioSyntaxFile ::= item_*

private item_ ::= (declaration|geneDefinition|COMMENT|CRLF)

declaration ::= (nt_declaration|rna_declaration|dna_declaration|aa_declaration) {
    methods=[getSequenceText getIdentifier getName]
}

nt_declaration ::= NT_SEQ IDENTIFIER EQUALS QUOTE NUCLEOTIDE+ QUOTE
rna_declaration ::= RNA_SEQ IDENTIFIER EQUALS QUOTE RNA_NUCLEOTIDE+ QUOTE
dna_declaration ::= DNA_SEQ IDENTIFIER EQUALS QUOTE DNA_NUCLEOTIDE+ QUOTE
aa_declaration ::= AA_SEQ IDENTIFIER EQUALS QUOTE AMINO_ACID+ QUOTE

geneDefinition ::= GENE IDENTIFIER LBRACE geneBody RBRACE {
  methods=[getName getGeneStructure]
}

geneBody ::= geneProperty*

geneProperty ::= (PROMOTER | START_CODON | CODING_SEQUENCE | STOP_CODON | TERMINATOR)
                 (EQUALS (QUOTE (NUCLEOTIDE)* QUOTE | EMPTY_STRING) | SEMICOLON)

EMPTY_STRING ::= QUOTE QUOTE